#!/bin/bash
#usage : ./check_rds_new myhost WriteIOPS 800
#OK - WriteIOPS=67.22689075630252 |WriteIOPS=67.22689075630252\n

DBINSTANCE=$1
METRIC=$2
MXTHRESHOLD=$3
MNTHRESHOLD=$4
RESULT=""
#change this to locatoin of mon-get-stats on your system
MON_GET_CMD="/opt/aws/apitools/mon/bin/mon-get-stats"
AWS_CRED_FILE="/opt/aws/credential.conf"

function checkthresh {
#    RESULT=${RESULT/.*}
    COMP=`echo "$RESULT<$MXTHRESHOLD" | bc`
    if [[ "$COMP" -eq "0" ]]
        then
        warn
    else
        echo "OK - $STAT |$STAT\n"
        exit 0
    fi
}

function warn {
    echo "WARNING - WARNING - $METRIC:$RESULT | $METRIC:$RESULT;"
    exit 1
}

function check_stat {
    if [[ "$METRIC" == "CPUUtilization" ]]
    then
	RESULT=`$MON-GET-CMD $METRIC --period 60 --namespace AWS/RDS --dimensions "DBInstanceIdentifier=$DBINSTANCE" --statistics "Sum" --aws-credential-file=$AWS-CRED-FILE | tail -n 1 | awk '{print $3}'`
    else
	RESULT=`$MON-GET-CMD $METRIC --period 60 --start-time $(date +'%Y-%m-%dT%H:%M' --date='-1 minutes') --end-time $(date +'%Y-%m-%dT%H:%M') --namespace AWS/RDS --dimensions "DBInstanceIdentifier=$DBINSTANCE" --statistics "Sum" --aws-credential-file=$AWS-CRED-FILE | tail -n 1 | awk '{print $3}'`
    fi

    if [[ "$RESULT" == *E* ]]
    then
	RESULT=$(echo $RESULT | awk '{printf "%f", $1}')
    fi
}

check_stat
STAT="$METRIC=${RESULT}"

if [[ "$METRIC" == "WriteIOPS" ]]
    then
    checkthresh

elif [[ "$METRIC" == "ReadIOPS" ]]
    then
    checkthresh

elif [[ "$METRIC" == "ReadThroughput" ]]
    then
    echo "OK - $STAT |$STAT\n"
    exit 0

elif [[ "$METRIC" == "WriteThroughput" ]]
    then
    echo "OK - $STAT |$STAT\n"
    exit 0

elif [[ "$METRIC" == "ReadLatency" ]]
    then
    echo "OK - $STAT |$STAT\n"
    exit 0

elif [[ "$METRIC" == "WriteLatency" ]]
    then
    echo "OK - $STAT |$STAT\n"
    exit 0

elif [[ "$METRIC" == "DatabaseConnections" ]]
    then
    echo "OK - $STAT |$STAT\n"
    exit 0

elif [[ "$METRIC" == "CPUUtilization" ]]
    then
    checkthresh

elif [[ "$METRIC" == "FreeStorageSpace" ]]
    then
    RESULT=${RESULT/.*}
    if [[ $RESULT -lt $MXTHRESHOLD ]]
	then
	warn
    else
	echo "OK - $STAT |$STAT\n"
	exit 0
    fi


elif [[ "$METRIC" == "DiskQueueDepth" ]]
    then
    echo "OK - $STAT |$STAT\n"
    exit 0

elif [[ "$METRIC" == "FreeableMemory" ]]
    then
    echo "OK - $STAT |$STAT\n"
    exit 0

elif [[ "$METRIC" == "BinLogDiskUsage" ]]
    then
    echo "OK - $STAT |$STAT\n"
    exit 0

elif [[ "$METRIC" == "SwapUsage" ]]
    then
    echo "OK - $STAT |$STAT\n"
    exit 0

else
    echo "UNKNOWN - UNKNOWN CHECK"
    exit 3
fi


